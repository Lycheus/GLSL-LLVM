@wave_Vertex = attribute <4 x float> zeroinitializer
@time = uniform float zeroinitializer
@ami = uniform [7 x float] zeroinitializer
@wl = uniform [7 x float] zeroinitializer
@qq = uniform [7 x float] zeroinitializer
@dirx = uniform [7 x float] zeroinitializer
@diry = uniform [7 x float] zeroinitializer
@s = uniform float zeroinitializer
@facing = varying float zeroinitializer
@lightPosition = uniform <3 x float> zeroinitializer
@lightDir = varying <3 x float> zeroinitializer
@ecPosition = varying <3 x float> zeroinitializer
@Intensity = varying float zeroinitializer
@viewVec = varying <3 x float> zeroinitializer
@normal = varying <3 x float> zeroinitializer

define void @main() {
entry:
	%start = call <4 x float> @OpenGLES.Start()
	%v = call <4 x float> @OpenGLES.ConstructVec4.vec4(<4 x float> %wave_Vertex)
	%total = or float 0x0000000000000000, 0
	%total1 = or float 0x0000000000000000, 0
	%total2 = or float 0x0000000000000000, 0
	%norm1 = or float 0x0000000000000000, 0
	%norm2 = or float 0x0000000000000000, 0
	%norm3 = or float 0x0000000000000000, 0
	%binorm1 = or float 0x0000000000000000, 0
	%binorm2 = or float 0x0000000000000000, 0
	%binorm3 = or float 0x0000000000000000, 0
	%tg1 = or float 0x0000000000000000, 0
	%tg2 = or float 0x0000000000000000, 0
	%tg3 = or float 0x0000000000000000, 0
	%i = or i32 0, 0
L1.C:
	%0 = icmp slt, i32 %i, 7
	br i1 %0, label %L1.B, label %L1.E
L1.B:
	%1 = extractvalue [7 x float] @dirx, %i
	%2 = extractelement <4 x float> %v, i32 0
	%3 = mul float %2, %1
	%4 = extractvalue [7 x float] @diry, %i
	%5 = extractelement <4 x float> %v, i32 1
	%6 = mul float %5, %4
	%7 = add float %3, %6
	%8 = extractvalue [7 x float] @wl, %i
	%9 = fdiv float 0x40191EB860000000, %8
	%10 = mul float %7, %9
	%11 = mul float @time, 0x40091EB860000000
	%12 = mul float %11, 0x4000000000000000
	%13 = extractvalue [7 x float] @wl, %i
	%14 = fdiv float %12, %13
	%15 = mul float %14, @s
	%16 = add float %10, %15
	%17 = extractvalue [7 x float] @dirx, %i
	%18 = call float @OpenGLES.Cos(float %16)
	%19 = mul float %18, %17
	%20 = extractvalue [7 x float] @ami, %i
	%21 = mul float %19, %20
	%22 = extractvalue [7 x float] @qq, %i
	%23 = mul float %21, %22
	%24 = add float %total, %23
	%total = or float %24, 0
	%25 = extractvalue [7 x float] @dirx, %i
	%26 = extractelement <4 x float> %v, i32 0
	%27 = mul float %26, %25
	%28 = extractvalue [7 x float] @diry, %i
	%29 = extractelement <4 x float> %v, i32 1
	%30 = mul float %29, %28
	%31 = add float %27, %30
	%32 = extractvalue [7 x float] @wl, %i
	%33 = fdiv float 0x40191EB860000000, %32
	%34 = mul float %31, %33
	%35 = mul float @time, 0x40091EB860000000
	%36 = mul float %35, 0x4000000000000000
	%37 = extractvalue [7 x float] @wl, %i
	%38 = fdiv float %36, %37
	%39 = mul float %38, @s
	%40 = add float %34, %39
	%41 = extractvalue [7 x float] @diry, %i
	%42 = call float @OpenGLES.Cos(float %40)
	%43 = mul float %42, %41
	%44 = extractvalue [7 x float] @ami, %i
	%45 = mul float %43, %44
	%46 = extractvalue [7 x float] @qq, %i
	%47 = mul float %45, %46
	%48 = add float %total1, %47
	%total1 = or float %48, 0
	%49 = extractvalue [7 x float] @dirx, %i
	%50 = extractelement <4 x float> %v, i32 0
	%51 = mul float %50, %49
	%52 = extractvalue [7 x float] @diry, %i
	%53 = extractelement <4 x float> %v, i32 1
	%54 = mul float %53, %52
	%55 = add float %51, %54
	%56 = extractvalue [7 x float] @wl, %i
	%57 = fdiv float 0x40191EB860000000, %56
	%58 = mul float %55, %57
	%59 = mul float @time, 0x40091EB860000000
	%60 = mul float %59, 0x4000000000000000
	%61 = extractvalue [7 x float] @wl, %i
	%62 = fdiv float %60, %61
	%63 = mul float %62, @s
	%64 = add float %58, %63
	%65 = extractvalue [7 x float] @ami, %i
	%66 = call float @OpenGLES.Sin(float %64)
	%67 = mul float %66, %65
	%68 = add float %total2, %67
	%total2 = or float %68, 0
	%69 = extractvalue [7 x float] @dirx, %i
	%70 = extractelement <4 x float> %v, i32 0
	%71 = mul float %70, %69
	%72 = extractvalue [7 x float] @diry, %i
	%73 = extractelement <4 x float> %v, i32 1
	%74 = mul float %73, %72
	%75 = add float %71, %74
	%76 = extractvalue [7 x float] @wl, %i
	%77 = fdiv float 0x40191EB860000000, %76
	%78 = mul float %75, %77
	%79 = mul float @time, 0x40091EB860000000
	%80 = mul float %79, 0x4000000000000000
	%81 = extractvalue [7 x float] @wl, %i
	%82 = fdiv float %80, %81
	%83 = mul float %82, @s
	%84 = add float %78, %83
	%85 = extractvalue [7 x float] @wl, %i
	%86 = fdiv float 0x40191EB860000000, %85
	%87 = call float @OpenGLES.Cos(float %84)
	%88 = mul float %87, %86
	%89 = extractvalue [7 x float] @ami, %i
	%90 = mul float %88, %89
	%91 = extractvalue [7 x float] @dirx, %i
	%92 = mul float %90, %91
	%93 = add float %norm1, %92
	%norm1 = or float %93, 0
	%94 = extractvalue [7 x float] @diry, %i
	%95 = extractelement <4 x float> %v, i32 0
	%96 = mul float %95, %94
	%97 = extractvalue [7 x float] @diry, %i
	%98 = extractelement <4 x float> %v, i32 1
	%99 = mul float %98, %97
	%100 = add float %96, %99
	%101 = extractvalue [7 x float] @wl, %i
	%102 = fdiv float 0x40191EB860000000, %101
	%103 = mul float %100, %102
	%104 = mul float @time, 0x40091EB860000000
	%105 = mul float %104, 0x4000000000000000
	%106 = extractvalue [7 x float] @wl, %i
	%107 = fdiv float %105, %106
	%108 = mul float %107, @s
	%109 = add float %103, %108
	%110 = extractvalue [7 x float] @wl, %i
	%111 = fdiv float 0x40191EB860000000, %110
	%112 = call float @OpenGLES.Cos(float %109)
	%113 = mul float %112, %111
	%114 = extractvalue [7 x float] @ami, %i
	%115 = mul float %113, %114
	%116 = extractvalue [7 x float] @dirx, %i
	%117 = mul float %115, %116
	%118 = add float %norm2, %117
	%norm2 = or float %118, 0
	%119 = extractvalue [7 x float] @dirx, %i
	%120 = extractelement <4 x float> %v, i32 0
	%121 = mul float %120, %119
	%122 = extractvalue [7 x float] @diry, %i
	%123 = extractelement <4 x float> %v, i32 1
	%124 = mul float %123, %122
	%125 = add float %121, %124
	%126 = extractvalue [7 x float] @wl, %i
	%127 = fdiv float 0x40191EB860000000, %126
	%128 = mul float %125, %127
	%129 = mul float @time, 0x40091EB860000000
	%130 = mul float %129, 0x4000000000000000
	%131 = extractvalue [7 x float] @wl, %i
	%132 = fdiv float %130, %131
	%133 = mul float %132, @s
	%134 = add float %128, %133
	%135 = extractvalue [7 x float] @wl, %i
	%136 = fdiv float 0x40191EB860000000, %135
	%137 = call float @OpenGLES.Sin(float %134)
	%138 = mul float %137, %136
	%139 = extractvalue [7 x float] @ami, %i
	%140 = mul float %138, %139
	%141 = extractvalue [7 x float] @qq, %i
	%142 = mul float %140, %141
	%143 = add float %norm3, %142
	%norm3 = or float %143, 0
	%144 = extractvalue [7 x float] @dirx, %i
	%145 = extractelement <4 x float> %v, i32 0
	%146 = mul float %145, %144
	%147 = extractvalue [7 x float] @diry, %i
	%148 = extractelement <4 x float> %v, i32 1
	%149 = mul float %148, %147
	%150 = add float %146, %149
	%151 = extractvalue [7 x float] @wl, %i
	%152 = fdiv float 0x40191EB860000000, %151
	%153 = mul float %150, %152
	%154 = mul float @time, 0x40091EB860000000
	%155 = mul float %154, 0x4000000000000000
	%156 = extractvalue [7 x float] @wl, %i
	%157 = fdiv float %155, %156
	%158 = mul float %157, @s
	%159 = add float %153, %158
	%160 = extractvalue [7 x float] @wl, %i
	%161 = fdiv float 0x40191EB860000000, %160
	%162 = call float @OpenGLES.Sin(float %159)
	%163 = mul float %162, %161
	%164 = extractvalue [7 x float] @ami, %i
	%165 = mul float %163, %164
	%166 = extractvalue [7 x float] @dirx, %i
	%167 = mul float %165, %166
	%168 = extractvalue [7 x float] @dirx, %i
	%169 = mul float %167, %168
	%170 = extractvalue [7 x float] @qq, %i
	%171 = mul float %169, %170
	%172 = add float %binorm1, %171
	%binorm1 = or float %172, 0
	%173 = extractvalue [7 x float] @dirx, %i
	%174 = extractelement <4 x float> %v, i32 0
	%175 = mul float %174, %173
	%176 = extractvalue [7 x float] @diry, %i
	%177 = extractelement <4 x float> %v, i32 1
	%178 = mul float %177, %176
	%179 = add float %175, %178
	%180 = extractvalue [7 x float] @wl, %i
	%181 = fdiv float 0x40191EB860000000, %180
	%182 = mul float %179, %181
	%183 = mul float @time, 0x40091EB860000000
	%184 = mul float %183, 0x4000000000000000
	%185 = extractvalue [7 x float] @wl, %i
	%186 = fdiv float %184, %185
	%187 = mul float %186, @s
	%188 = add float %182, %187
	%189 = extractvalue [7 x float] @wl, %i
	%190 = fdiv float 0x40191EB860000000, %189
	%191 = call float @OpenGLES.Sin(float %188)
	%192 = mul float %191, %190
	%193 = extractvalue [7 x float] @ami, %i
	%194 = mul float %192, %193
	%195 = extractvalue [7 x float] @diry, %i
	%196 = mul float %194, %195
	%197 = extractvalue [7 x float] @dirx, %i
	%198 = mul float %196, %197
	%199 = extractvalue [7 x float] @qq, %i
	%200 = mul float %198, %199
	%201 = add float %binorm2, %200
	%binorm2 = or float %201, 0
	%202 = extractvalue [7 x float] @dirx, %i
	%203 = extractelement <4 x float> %v, i32 0
	%204 = mul float %203, %202
	%205 = extractvalue [7 x float] @diry, %i
	%206 = extractelement <4 x float> %v, i32 1
	%207 = mul float %206, %205
	%208 = add float %204, %207
	%209 = extractvalue [7 x float] @wl, %i
	%210 = fdiv float 0x40191EB860000000, %209
	%211 = mul float %208, %210
	%212 = mul float @time, 0x40091EB860000000
	%213 = mul float %212, 0x4000000000000000
	%214 = extractvalue [7 x float] @wl, %i
	%215 = fdiv float %213, %214
	%216 = mul float %215, @s
	%217 = add float %211, %216
	%218 = extractvalue [7 x float] @wl, %i
	%219 = fdiv float 0x40191EB860000000, %218
	%220 = call float @OpenGLES.Cos(float %217)
	%221 = mul float %220, %219
	%222 = extractvalue [7 x float] @ami, %i
	%223 = mul float %221, %222
	%224 = extractvalue [7 x float] @dirx, %i
	%225 = mul float %223, %224
	%226 = add float %binorm3, %225
	%binorm3 = or float %226, 0
	%227 = extractvalue [7 x float] @dirx, %i
	%228 = extractelement <4 x float> %v, i32 0
	%229 = mul float %228, %227
	%230 = extractvalue [7 x float] @diry, %i
	%231 = extractelement <4 x float> %v, i32 1
	%232 = mul float %231, %230
	%233 = add float %229, %232
	%234 = extractvalue [7 x float] @wl, %i
	%235 = fdiv float 0x40191EB860000000, %234
	%236 = mul float %233, %235
	%237 = mul float @time, 0x40091EB860000000
	%238 = mul float %237, 0x4000000000000000
	%239 = extractvalue [7 x float] @wl, %i
	%240 = fdiv float %238, %239
	%241 = mul float %240, @s
	%242 = add float %236, %241
	%243 = extractvalue [7 x float] @wl, %i
	%244 = fdiv float 0x40191EB860000000, %243
	%245 = call float @OpenGLES.Sin(float %242)
	%246 = mul float %245, %244
	%247 = extractvalue [7 x float] @ami, %i
	%248 = mul float %246, %247
	%249 = extractvalue [7 x float] @diry, %i
	%250 = mul float %248, %249
	%251 = extractvalue [7 x float] @dirx, %i
	%252 = mul float %250, %251
	%253 = extractvalue [7 x float] @qq, %i
	%254 = mul float %252, %253
	%255 = add float %tg1, %254
	%tg1 = or float %255, 0
	%256 = extractvalue [7 x float] @dirx, %i
	%257 = extractelement <4 x float> %v, i32 0
	%258 = mul float %257, %256
	%259 = extractvalue [7 x float] @diry, %i
	%260 = extractelement <4 x float> %v, i32 1
	%261 = mul float %260, %259
	%262 = add float %258, %261
	%263 = extractvalue [7 x float] @wl, %i
	%264 = fdiv float 0x40191EB860000000, %263
	%265 = mul float %262, %264
	%266 = mul float @time, 0x40091EB860000000
	%267 = mul float %266, 0x4000000000000000
	%268 = extractvalue [7 x float] @wl, %i
	%269 = fdiv float %267, %268
	%270 = mul float %269, @s
	%271 = add float %265, %270
	%272 = extractvalue [7 x float] @wl, %i
	%273 = fdiv float 0x40191EB860000000, %272
	%274 = call float @OpenGLES.Sin(float %271)
	%275 = mul float %274, %273
	%276 = extractvalue [7 x float] @ami, %i
	%277 = mul float %275, %276
	%278 = extractvalue [7 x float] @diry, %i
	%279 = mul float %277, %278
	%280 = extractvalue [7 x float] @diry, %i
	%281 = mul float %279, %280
	%282 = extractvalue [7 x float] @qq, %i
	%283 = mul float %281, %282
	%284 = add float %tg2, %283
	%tg2 = or float %284, 0
	%285 = extractvalue [7 x float] @dirx, %i
	%286 = extractelement <4 x float> %v, i32 0
	%287 = mul float %286, %285
	%288 = extractvalue [7 x float] @diry, %i
	%289 = extractelement <4 x float> %v, i32 1
	%290 = mul float %289, %288
	%291 = add float %287, %290
	%292 = extractvalue [7 x float] @wl, %i
	%293 = fdiv float 0x40191EB860000000, %292
	%294 = mul float %291, %293
	%295 = mul float @time, 0x40091EB860000000
	%296 = mul float %295, 0x4000000000000000
	%297 = extractvalue [7 x float] @wl, %i
	%298 = fdiv float %296, %297
	%299 = mul float %298, @s
	%300 = add float %294, %299
	%301 = extractvalue [7 x float] @wl, %i
	%302 = fdiv float 0x40191EB860000000, %301
	%303 = call float @OpenGLES.Cos(float %300)
	%304 = mul float %303, %302
	%305 = extractvalue [7 x float] @ami, %i
	%306 = mul float %304, %305
	%307 = extractvalue [7 x float] @diry, %i
	%308 = mul float %306, %307
	%309 = add float %tg3, %308
	%tg3 = or float %309, 0
L1.T:
	%310 = or i32 %i, 0
	%i = add i32 %i, 1
	br label %L1.C
L1.E:
	%311 = extractelement <4 x float> %v, i32 0
	%312 = add float %311, %total
	%v = insertelement <4 x float> %v, float %312, i32 0
	%313 = extractelement <4 x float> %v, i32 1
	%314 = add float %313, %total1
	%v = insertelement <4 x float> %v, float %314, i32 1
	%v = insertelement <4 x float> %v, float %total2, i32 2
	%315 = load <4 x 4 float>* @gl_ModelViewMatrix.u.0.4, align 16
	%316 = load <4 x 4 float>* @gl_ModelViewMatrix.u.1.4, align 16
	%317 = load <4 x 4 float>* @gl_ModelViewMatrix.u.2.4, align 16
	%318 = load <4 x 4 float>* @gl_ModelViewMatrix.u.3.4, align 16
	%319 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.1(<4 x 4 float> %318, <4 x 4 float> %317, <4 x 4 float> %316, <4 x 4 float> %315)
	%320 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.2(<4 x 4 float> %318, <4 x 4 float> %317, <4 x 4 float> %316, <4 x 4 float> %315)
	%321 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.3(<4 x 4 float> %318, <4 x 4 float> %317, <4 x 4 float> %316, <4 x 4 float> %315)
	%322 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.4(<4 x 4 float> %318, <4 x 4 float> %317, <4 x 4 float> %316, <4 x 4 float> %315)
	%323 = load <4 x float>* %v., align 16
	%324 = call <4 x float> @OpenGLES.CallRegister()
	%325 = call <4 x float> @OpenGLES.VectorTimesMatrix4.6(<4 x float> %323, <4 x 4 float> %322, <4 x 4 float> %321, <4 x 4 float> %320, <4 x 4 float> %319, <4 x float> %324)
	%ecPosition = call <3 x float> @OpenGLES.ConstructVec3.vec4(<4 x float> %325)
	%326 = call <3 x float> @OpenGLES.VectorNegate(<3 x float> %ecPosition)
	%viewVec = call <3 x float> @OpenGLES.Normalize(<3 x float> %326)
	%327 = sub i32 0, %norm1
	%328 = sub i32 0, %norm2
	%329 = sub float 0x3FF0000000000000, %norm3
	%normal = call <3 x float> @OpenGLES.ConstructVec3.f.f.f(float %327, float %328, float %329)
	%330 = load <3 x 3 float>* @gl_NormalMatrix.u.0.3, align 16
	%331 = load <3 x 3 float>* @gl_NormalMatrix.u.1.3, align 16
	%332 = load <3 x 3 float>* @gl_NormalMatrix.u.2.3, align 16
	%333 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %332, <3 x 3 float> %331, <3 x 3 float> %330)
	%334 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %332, <3 x 3 float> %331, <3 x 3 float> %330)
	%335 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %332, <3 x 3 float> %331, <3 x 3 float> %330)
	%336 = load <3 x float>* @normal.v, align 12
	%337 = call <3 x float> @OpenGLES.CallRegister()
	%338 = call <3 x float> @OpenGLES.VectorTimesMatrix4.5(<3 x float> %336, <3 x 3 float> %335, <3 x 3 float> %334, <3 x 3 float> %333, <3 x float> %337)
	%normal = call <3 x float> @OpenGLES.Normalize(<3 x float> %338)
	%339 = sub i32 0, %tg1
	%340 = sub float 0x3FF0000000000000, %tg2
	%tang = call <3 x float> @OpenGLES.ConstructVec3.f.f.f(float %339, float %340, float %tg3)
	%341 = load <3 x 3 float>* @gl_NormalMatrix.u.0.3, align 16
	%342 = load <3 x 3 float>* @gl_NormalMatrix.u.1.3, align 16
	%343 = load <3 x 3 float>* @gl_NormalMatrix.u.2.3, align 16
	%344 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %343, <3 x 3 float> %342, <3 x 3 float> %341)
	%345 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %343, <3 x 3 float> %342, <3 x 3 float> %341)
	%346 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %343, <3 x 3 float> %342, <3 x 3 float> %341)
	%347 = load <3 x float>* %tang., align 12
	%348 = call <3 x float> @OpenGLES.CallRegister()
	%349 = call <3 x float> @OpenGLES.VectorTimesMatrix4.5(<3 x float> %347, <3 x 3 float> %346, <3 x 3 float> %345, <3 x 3 float> %344, <3 x float> %348)
	%tang = call <3 x float> @OpenGLES.Normalize(<3 x float> %349)
	%350 = sub float 0x3FF0000000000000, %binorm1
	%351 = sub i32 0, %binorm2
	%binormal = call <3 x float> @OpenGLES.ConstructVec3.f.f.f(float %350, float %351, float %binorm3)
	%352 = load <3 x 3 float>* @gl_NormalMatrix.u.0.3, align 16
	%353 = load <3 x 3 float>* @gl_NormalMatrix.u.1.3, align 16
	%354 = load <3 x 3 float>* @gl_NormalMatrix.u.2.3, align 16
	%355 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %354, <3 x 3 float> %353, <3 x 3 float> %352)
	%356 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %354, <3 x 3 float> %353, <3 x 3 float> %352)
	%357 = call <3 x 3 float> @OpenGLES.ChangeMatrix3.3(<3 x 3 float> %354, <3 x 3 float> %353, <3 x 3 float> %352)
	%358 = load <3 x float>* %binormal., align 12
	%359 = call <3 x float> @OpenGLES.CallRegister()
	%360 = call <3 x float> @OpenGLES.VectorTimesMatrix4.5(<3 x float> %358, <3 x 3 float> %357, <3 x 3 float> %356, <3 x 3 float> %355, <3 x float> %359)
	%binormal = call <3 x float> @OpenGLES.Normalize(<3 x float> %360)
	%361 = call float @OpenGLES.Length(<3 x float> %normal)
	%362 = call float @OpenGLES.Length(<3 x float> %viewVec)
	%363 = mul float %362, %361
	%364 = call float @OpenGLES.Dot(<3 x float> %normal, <3 x float> %viewVec)
	%365 = fdiv float %364, %363
	%facing = or float %365, 0
	%366 = sub <3 x float> %lightPosition, @ecPosition
	%lightVec = call <3 x float> @OpenGLES.Normalize(<3 x float> %366)
	%367 = call <3 x float> @OpenGLES.VectorNegate(<3 x float> %lightVec)
	%reflectVec = call <3 x float> @OpenGLES.Reflect(<3 x float> %367, <3 x float> %normal)
	%368 = call float @OpenGLES.Dot(<3 x float> %reflectVec, <3 x float> %viewVec)
	%spec = call float @OpenGLES.Clamp(float %368, float 0x0000000000000000, float 0x3FF0000000000000)
	%spec = call float @OpenGLES.Pow(float %spec, float 0x4020000000000000)
	%369 = call float @OpenGLES.Dot(<3 x float> %lightVec, <3 x float> %normal)
	%370 = call float @OpenGLES.Max(float %369, float 0x0000000000000000)
	%371 = mul float %370, 0x3FECCCCCC0000000
	%372 = mul float %spec, 0x3FB99999A0000000
	%373 = add float %371, %372
	%Intensity = or float %373, 0
	%gl_TexCoord = insertvalue [0 x <4 x float>] @gl_TexCoord, <4 x float> %gl_MultiTexCoord0, 0
	%374 = load <4 x 4 float>* @gl_ModelViewProjectionMatrix.u.0.4, align 16
	%375 = load <4 x 4 float>* @gl_ModelViewProjectionMatrix.u.1.4, align 16
	%376 = load <4 x 4 float>* @gl_ModelViewProjectionMatrix.u.2.4, align 16
	%377 = load <4 x 4 float>* @gl_ModelViewProjectionMatrix.u.3.4, align 16
	%378 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.1(<4 x 4 float> %377, <4 x 4 float> %376, <4 x 4 float> %375, <4 x 4 float> %374)
	%379 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.2(<4 x 4 float> %377, <4 x 4 float> %376, <4 x 4 float> %375, <4 x 4 float> %374)
	%380 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.3(<4 x 4 float> %377, <4 x 4 float> %376, <4 x 4 float> %375, <4 x 4 float> %374)
	%381 = call <4 x 4 float> @OpenGLES.ChangeMatrix4.4.4(<4 x 4 float> %377, <4 x 4 float> %376, <4 x 4 float> %375, <4 x 4 float> %374)
	%382 = load <4 x float>* %v., align 16
	%383 = call <4 x float> @OpenGLES.CallRegister()
	%384 = call <4 x float> @OpenGLES.VectorTimesMatrix4.6(<4 x float> %382, <4 x 4 float> %381, <4 x 4 float> %380, <4 x 4 float> %379, <4 x 4 float> %378, <4 x float> %383)
	%385 = call <4 x float> @OpenGLES.CallRegister()
	%gl_Position = call <4 x float> @OpenGLES.END.2(<4 x float> %384, <4 x float> %385)
	%386 = call float @OpenGLES.Dot(<3 x float> %lightPosition, <3 x float> %tang)
	%v2 = insertelement <3 x float> %v2, float %386, i32 0
	%387 = call float @OpenGLES.Dot(<3 x float> %lightPosition, <3 x float> %binormal)
	%v2 = insertelement <3 x float> %v2, float %387, i32 1
	%388 = call float @OpenGLES.Dot(<3 x float> %lightPosition, <3 x float> %normal)
	%v2 = insertelement <3 x float> %v2, float %388, i32 2
	%lightDir = call <3 x float> @OpenGLES.Normalize(<3 x float> %v2)
	%389 = call float @OpenGLES.Dot(<3 x float> %ecPosition, <3 x float> %tang)
	%v2 = insertelement <3 x float> %v2, float %389, i32 0
	%390 = call float @OpenGLES.Dot(<3 x float> %ecPosition, <3 x float> %binormal)
	%v2 = insertelement <3 x float> %v2, float %390, i32 1
	%391 = call float @OpenGLES.Dot(<3 x float> %ecPosition, <3 x float> %normal)
	%v2 = insertelement <3 x float> %v2, float %391, i32 2
	%ecPosition = call <3 x float> @OpenGLES.Normalize(<3 x float> %v2)

br label %return
return:
	ret void
}



